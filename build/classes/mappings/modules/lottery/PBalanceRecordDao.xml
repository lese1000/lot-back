<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.lottery.dao.PBalanceRecordDao">
    
	<sql id="pBalanceRecordColumns">
		a.id AS "id",
		a.balance_type AS "balanceType",
		a.order_id AS "orderId",
		a.player_id AS "playerId",
		a.balance_val AS "balanceVal",
		a.create_date AS "createDate",
		b.player_name AS "playerName"
	</sql>
	
	<sql id="pBalanceRecordJoins">
	</sql>
	
    
	<select id="get" resultType="PBalanceRecord" >
		SELECT 
			<include refid="pBalanceRecordColumns"/>
		FROM p_balance_record a
		Left join p_player b on a.player_id=b.id
		<include refid="pBalanceRecordJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PBalanceRecord" >
		SELECT 
			<include refid="pBalanceRecordColumns"/>
		FROM p_balance_record a
		Left join p_player b on a.player_id=b.id
		<include refid="pBalanceRecordJoins"/>
		<where>
			
			<if test="balanceType != null and balanceType != ''">
				AND a.balance_type = #{balanceType}
			</if>
			<if test="playerName != null and playerName != ''">
				AND b.player_name = #{playerName}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY  a.id desc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PBalanceRecord" >
		SELECT 
			<include refid="pBalanceRecordColumns"/>
		FROM p_balance_record a
		Left join p_player b on a.player_id=b.id
		<include refid="pBalanceRecordJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO p_balance_record(
			balance_type,
			<if test="orderId!=null">
				order_id,
			</if>
			player_id,
			balance_val,
			create_date,
			create_user
		) VALUES (
			#{balanceType},
			<if test="orderId!=null">
				#{orderId},
			</if>
			#{playerId},
			#{balanceVal},
			NOW(),
			#{createUser}
		)
	</insert>
	
	<update id="update">
		UPDATE p_balance_record SET 	
			id = #{id},
			balance_type = #{balanceType},
			order_id = #{orderId},
			player_id = #{playerId},
			balance_val = #{balanceVal}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM p_balance_record
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE p_balance_record SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="PBalanceRecord" statementType="STATEMENT">
		select * FROM p_balance_record  where ${propertyName} = '${value}'
	</select>
	
	<select id="findBalanceByVoForParent" resultType="com.jeeplus.modules.lottery.vo.PlayerBalanceVo" >
		select a.parent playerId,c.player_name playerName,
			sum(CASE balance_type WHEN '1' THEN		balance_val	ELSE 0	END	) 'bt1',
			sum(CASE balance_type WHEN '2' THEN		balance_val	ELSE 0	END	) 'bt2',
			sum(CASE balance_type WHEN '3' THEN		balance_val	ELSE 0	END	) 'bt3',
			sum(CASE balance_type WHEN '4' THEN		balance_val	ELSE 0	END	) 'bt4'
		FROM p_player a,p_balance_record b,p_player c
		where a.id=b.player_id and b.balance_type &lt;5   and a.parent=c.id
		<if test="createDateStart!=null">
			and b.create_date &gt;=#{createDateStart}
		</if>
		<if test="createDateEnd!=null">
			and b.create_date &lt;#{createDateEnd}
		</if>
		<if test="playerName!=null and playerName!=''">
			and c.player_name=#{playerName}
		</if>
		GROUP BY a.parent,c.player_name
	</select>
	
	<select id="findBalanceByVo" resultType="com.jeeplus.modules.lottery.vo.PlayerBalanceVo">
		SELECT
			player_id playerId,player_name playerName,
			sum(CASE balance_type WHEN '1' THEN		balance_val	ELSE 0	END	) 'bt1',
			sum(CASE balance_type WHEN '2' THEN		balance_val	ELSE 0	END	) 'bt2',
			sum(CASE balance_type WHEN '3' THEN		balance_val	ELSE 0	END	) 'bt3',
			sum(CASE balance_type WHEN '4' THEN		balance_val	ELSE 0	END	) 'bt4',
			sum(CASE balance_type WHEN '5' THEN		balance_val	ELSE 0	END	) 'bt5',
			sum(CASE balance_type WHEN '6' THEN		balance_val	ELSE 0	END	) 'bt6'
		FROM
			(
				SELECT	a.balance_type,	a.balance_val,	b.player_name,	a.player_id	FROM
					(
						SELECT	player_id,	balance_type,SUM(balance_val) balance_val FROM p_balance_record
						WHERE 1=1
						<if test="createDateStart!=null">
							and create_date &gt;=#{createDateStart}
						</if>
						<if test="createDateEnd!=null">
							and create_date &lt;#{createDateEnd}
						</if>
						GROUP BY player_id,balance_type
					) a
				LEFT JOIN p_player b ON a.player_id = b.id
				<if test="playerName!=null and playerName!=''">
					WHERE b.player_name=#{playerName}
				</if>
			) TmpA
		GROUP BY player_id,player_name;
	</select>
	
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.lottery.dao.POrderDao">
    
	<sql id="pOrderColumns">
		a.id AS "id",
		a.order_num AS "orderNum",
		a.lottery_num_id AS "lotteryNumId",
		a.player_id AS "playerId",
		a.is_join_buy AS "isJoinBuy",
		a.order_status AS "orderStatus",
		a.create_time AS "createTime"
	</sql>
	
	<sql id="pOrderJoins">
	</sql>
	
    
	<select id="get" resultType="POrder" >
		SELECT 
			<include refid="pOrderColumns"/>
		FROM p_order a
		<include refid="pOrderJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="POrder" >
		SELECT 
			<include refid="pOrderColumns"/>
		FROM p_order a
		<include refid="pOrderJoins"/>
		<where>
			
			<if test="orderNum != null and orderNum != ''">
				AND a.order_num = #{orderNum}
			</if>
			<if test="playerId != null and playerId != ''">
				AND a.player_id = #{playerId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="POrder" >
		SELECT 
			<include refid="pOrderColumns"/>
		FROM p_order a
		<include refid="pOrderJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO p_order(
			order_num,
			lottery_num_id,
			player_id,
			is_join_buy,
			order_status,
			create_time
		) VALUES (
			#{orderNum},
			#{lotteryNumId},
			#{playerId},
			#{isJoinBuy},
			#{orderStatus},
			#{createTime}
		)
	</insert>
	
	<update id="update">
		UPDATE p_order SET 	
			id = #{id},
			order_num = #{orderNum},
			lottery_num_id = #{lotteryNumId},
			player_id = #{playerId},
			is_join_buy = #{isJoinBuy},
			order_status = #{orderStatus},
			create_time = #{createTime}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM p_order
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE p_order SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="POrder" statementType="STATEMENT">
		select * FROM p_order  where ${propertyName} = '${value}'
	</select>
	
</mapper>
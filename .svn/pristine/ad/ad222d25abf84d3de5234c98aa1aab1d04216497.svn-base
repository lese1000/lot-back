/**
 * apple
 */
package com.jeeplus.modules.lottery.web;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.ConstraintViolationException;

import org.apache.shiro.authz.annotation.Logical;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.google.common.collect.Lists;
import com.jeeplus.common.utils.DateUtils;
import com.jeeplus.common.utils.MyBeanUtils;
import com.jeeplus.common.config.Global;
import com.jeeplus.common.persistence.Page;
import com.jeeplus.common.web.BaseController;
import com.jeeplus.common.utils.StringUtils;
import com.jeeplus.common.utils.excel.ExportExcel;
import com.jeeplus.common.utils.excel.ImportExcel;
import com.jeeplus.modules.lottery.entity.SCashRecord;
import com.jeeplus.modules.lottery.service.SCashRecordService;

/**
 * CashRecordController
 * @author asd
 * @version 2018-01-29
 */
@Controller
@RequestMapping(value = "${adminPath}/lottery/sCashRecord")
public class SCashRecordController extends BaseController {

	@Autowired
	private SCashRecordService sCashRecordService;
	
	@ModelAttribute
	public SCashRecord get(@RequestParam(required=false) String id) {
		SCashRecord entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = sCashRecordService.get(id);
		}
		if (entity == null){
			entity = new SCashRecord();
		}
		return entity;
	}
	
	/**
	 * CashRecord列表页面
	 */
	@RequiresPermissions("lottery:sCashRecord:list")
	@RequestMapping(value = {"list", ""})
	public String list(SCashRecord sCashRecord, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<SCashRecord> page = sCashRecordService.findPage(new Page<SCashRecord>(request, response), sCashRecord); 
		model.addAttribute("page", page);
		return "modules/lottery/sCashRecordList";
	}

	/**
	 * 查看，增加，编辑CashRecord表单页面
	 */
	@RequiresPermissions(value={"lottery:sCashRecord:view","lottery:sCashRecord:add","lottery:sCashRecord:edit"},logical=Logical.OR)
	@RequestMapping(value = "form")
	public String form(SCashRecord sCashRecord, Model model) {
		model.addAttribute("sCashRecord", sCashRecord);
		return "modules/lottery/sCashRecordForm";
	}

	/**
	 * 保存CashRecord
	 */
	@RequiresPermissions(value={"lottery:sCashRecord:add","lottery:sCashRecord:edit"},logical=Logical.OR)
	@RequestMapping(value = "save")
	public String save(SCashRecord sCashRecord, Model model, RedirectAttributes redirectAttributes) throws Exception{
		if (!beanValidator(model, sCashRecord)){
			return form(sCashRecord, model);
		}
		if(!sCashRecord.getIsNewRecord()){//编辑表单保存
			SCashRecord t = sCashRecordService.get(sCashRecord.getId());//从数据库取出记录的值
			MyBeanUtils.copyBeanNotNull2Bean(sCashRecord, t);//将编辑表单中的非NULL值覆盖数据库记录中的值
			sCashRecordService.save(t);//保存
		}else{//新增表单保存
			sCashRecordService.save(sCashRecord);//保存
		}
		addMessage(redirectAttributes, "保存CashRecord成功");
		return "redirect:"+Global.getAdminPath()+"/lottery/sCashRecord/?repage";
	}
	
	/**
	 * 删除CashRecord
	 */
	@RequiresPermissions("lottery:sCashRecord:del")
	@RequestMapping(value = "delete")
	public String delete(SCashRecord sCashRecord, RedirectAttributes redirectAttributes) {
		sCashRecordService.delete(sCashRecord);
		addMessage(redirectAttributes, "删除CashRecord成功");
		return "redirect:"+Global.getAdminPath()+"/lottery/sCashRecord/?repage";
	}
	
	/**
	 * 批量删除CashRecord
	 */
	@RequiresPermissions("lottery:sCashRecord:del")
	@RequestMapping(value = "deleteAll")
	public String deleteAll(String ids, RedirectAttributes redirectAttributes) {
		String idArray[] =ids.split(",");
		for(String id : idArray){
			sCashRecordService.delete(sCashRecordService.get(id));
		}
		addMessage(redirectAttributes, "删除CashRecord成功");
		return "redirect:"+Global.getAdminPath()+"/lottery/sCashRecord/?repage";
	}
	
	/**
	 * 导出excel文件
	 */
	@RequiresPermissions("lottery:sCashRecord:export")
    @RequestMapping(value = "export", method=RequestMethod.POST)
    public String exportFile(SCashRecord sCashRecord, HttpServletRequest request, HttpServletResponse response, RedirectAttributes redirectAttributes) {
		try {
            String fileName = "CashRecord"+DateUtils.getDate("yyyyMMddHHmmss")+".xlsx";
            Page<SCashRecord> page = sCashRecordService.findPage(new Page<SCashRecord>(request, response, -1), sCashRecord);
    		new ExportExcel("CashRecord", SCashRecord.class).setDataList(page.getList()).write(response, fileName).dispose();
    		return null;
		} catch (Exception e) {
			addMessage(redirectAttributes, "导出CashRecord记录失败！失败信息："+e.getMessage());
		}
		return "redirect:"+Global.getAdminPath()+"/lottery/sCashRecord/?repage";
    }

	/**
	 * 导入Excel数据

	 */
	@RequiresPermissions("lottery:sCashRecord:import")
    @RequestMapping(value = "import", method=RequestMethod.POST)
    public String importFile(MultipartFile file, RedirectAttributes redirectAttributes) {
		try {
			int successNum = 0;
			int failureNum = 0;
			StringBuilder failureMsg = new StringBuilder();
			ImportExcel ei = new ImportExcel(file, 1, 0);
			List<SCashRecord> list = ei.getDataList(SCashRecord.class);
			for (SCashRecord sCashRecord : list){
				try{
					sCashRecordService.save(sCashRecord);
					successNum++;
				}catch(ConstraintViolationException ex){
					failureNum++;
				}catch (Exception ex) {
					failureNum++;
				}
			}
			if (failureNum>0){
				failureMsg.insert(0, "，失败 "+failureNum+" 条CashRecord记录。");
			}
			addMessage(redirectAttributes, "已成功导入 "+successNum+" 条CashRecord记录"+failureMsg);
		} catch (Exception e) {
			addMessage(redirectAttributes, "导入CashRecord失败！失败信息："+e.getMessage());
		}
		return "redirect:"+Global.getAdminPath()+"/lottery/sCashRecord/?repage";
    }
	
	/**
	 * 下载导入CashRecord数据模板
	 */
	@RequiresPermissions("lottery:sCashRecord:import")
    @RequestMapping(value = "import/template")
    public String importFileTemplate(HttpServletResponse response, RedirectAttributes redirectAttributes) {
		try {
            String fileName = "CashRecord数据导入模板.xlsx";
    		List<SCashRecord> list = Lists.newArrayList(); 
    		new ExportExcel("CashRecord数据", SCashRecord.class, 1).setDataList(list).write(response, fileName).dispose();
    		return null;
		} catch (Exception e) {
			addMessage(redirectAttributes, "导入模板下载失败！失败信息："+e.getMessage());
		}
		return "redirect:"+Global.getAdminPath()+"/lottery/sCashRecord/?repage";
    }
	
	
	

}